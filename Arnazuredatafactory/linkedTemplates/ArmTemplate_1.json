{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Arnazuredatafactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DS_FUSION_BLOB_INPUT_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FUSION_BLOB_INPUT_CSV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FUSION"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EMPLOYEE.csv",
						"container": "arndatafiles"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FUSION_PARAMETER_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedServices",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FUSION"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "parameters.json",
						"container": "config"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"CUST": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"tblName": {
										"type": "string"
									},
									"stageName": {
										"type": "string"
									},
									"fileFormat": {
										"type": "string"
									},
									"schema": {
										"type": "string"
									},
									"filename": {
										"type": "string"
									}
								}
							}
						},
						"EMP": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"tblName": {
										"type": "string"
									},
									"stageName": {
										"type": "string"
									},
									"fileFormat": {
										"type": "string"
									},
									"schema": {
										"type": "string"
									},
									"filename": {
										"type": "string"
									}
								}
							}
						},
						"DATE_DIM": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"tblName": {
										"type": "string"
									},
									"stageName": {
										"type": "string"
									},
									"fileFormat": {
										"type": "string"
									},
									"schema": {
										"type": "string"
									},
									"filename": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FUSION_SOURCE_SNOWFLAKE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FUSION_SOURCE_SNOWFLAKE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FUSION"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "EMP_ID",
						"type": "NUMBER",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "EMP_NAME",
						"type": "VARCHAR",
						"precision": 100,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "ARN_LANDING",
					"table": "EMPLOYEE"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FUSION_TARGET_SNOWFLAKE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FUSION_TARGET_SNOWFLAKE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FUSION"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "SURRKEY",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "EMP_ID",
						"type": "NUMBER",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "EMP_NAME",
						"type": "VARCHAR",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "IS_ACTIVE",
						"type": "NUMBER",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "LAST_MODIFIED_DATE",
						"type": "TIMESTAMP_NTZ",
						"precision": 29,
						"scale": 9
					}
				],
				"typeProperties": {
					"schema": "ARN_CURATED",
					"table": "EMPLOYEE"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetSnowSchema')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADFSnowflake Linkseevice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "EMP"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParameterJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ParameterFile",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "parameters.json",
						"container": "config"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"CUST": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"tblName": {
										"type": "string"
									},
									"stageName": {
										"type": "string"
									},
									"fileFormat": {
										"type": "string"
									},
									"schema": {
										"type": "string"
									},
									"filename": {
										"type": "string"
									}
								}
							}
						},
						"EMP": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"tblName": {
										"type": "string"
									},
									"stageName": {
										"type": "string"
									},
									"fileFormat": {
										"type": "string"
									},
									"schema": {
										"type": "string"
									},
									"filename": {
										"type": "string"
									}
								}
							}
						},
						"DATE_DIM": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"tblName": {
										"type": "string"
									},
									"stageName": {
										"type": "string"
									},
									"fileFormat": {
										"type": "string"
									},
									"schema": {
										"type": "string"
									},
									"filename": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParamterFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedServices",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "parameters.json",
						"container": "config"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"CUST": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"tblName": {
										"type": "string"
									},
									"stageName": {
										"type": "string"
									},
									"fileFormat": {
										"type": "string"
									},
									"schema": {
										"type": "string"
									},
									"filename": {
										"type": "string"
									}
								}
							}
						},
						"EMP": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"tblName": {
										"type": "string"
									},
									"stageName": {
										"type": "string"
									},
									"fileFormat": {
										"type": "string"
									},
									"schema": {
										"type": "string"
									},
									"filename": {
										"type": "string"
									}
								}
							}
						},
						"DATE_DIM": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"tblName": {
										"type": "string"
									},
									"stageName": {
										"type": "string"
									},
									"fileFormat": {
										"type": "string"
									},
									"schema": {
										"type": "string"
									},
									"filename": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SchemaRead')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLinkedServices",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SCHEMA.csv",
						"container": "arndatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowDynamicDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADFSnowflake Linkseevice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SnowFileName": {
						"type": "string"
					},
					"SnowSchemaName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SnowSchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SnowFileName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADFSnowflake Linkseevice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "EMP_ID",
						"type": "NUMBER",
						"precision": 5,
						"scale": 0
					},
					{
						"name": "EMP_NAME",
						"type": "VARCHAR",
						"precision": 10,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "CUST"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FUSION_TEMP_SNOWFLAKE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_FUSION_TEMP_SNOWFLAKE",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FUSION"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "SURRKEY",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "EMP_ID",
						"type": "NUMBER",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "EMP_NAME",
						"type": "VARCHAR",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "IS_ACTIVE",
						"type": "NUMBER",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "LAST_MODIFIED_DATE",
						"type": "TIMESTAMP_NTZ",
						"precision": 29,
						"scale": 9
					}
				],
				"typeProperties": {
					"schema": "ARN_CURATED",
					"table": "EMPLOYEE_TEMP"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ARNPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Blob_To_Snowflake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeSink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ParamterFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SnowflakeTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 1
								}
							},
							"dataset": {
								"referenceName": "SchemaRead",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-12T14:09:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ParamterFile')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable')]",
				"[concat(variables('factoryId'), '/datasets/SchemaRead')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ARNPipeline_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Blob_To_Snowflake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeSink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "BlobCSV",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "EMP.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SnowflakeTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-10-12T14:09:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ARNSnowflake Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BlobCSV_copy1",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childitems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeSource",
											"query": {
												"value": "@concat('select * from information_schema.tables where table_schema = ''PUBLIC'' and table_name =''', toUpper(first(split(item().name,'.'))),'''')",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "GetSnowSchema",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "SnowflakeCopy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SnowflakeSink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "BlobData_copy1",
											"type": "DatasetReference",
											"parameters": {
												"Filename": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SnowflakeTable",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GetSnowSchema')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSnowflake Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BlobCSV_copy1",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childitems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeSource",
											"query": {
												"value": "@concat('select * from information_schema.tables where table_schema = ''PUBLIC'' and table_name =''', toUpper(first(split(item().name,'.'))),'''')",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "GetSnowSchema",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "SnowflakeCopy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SnowflakeSink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "BlobData_copy1",
											"type": "DatasetReference",
											"parameters": {
												"Filename": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SnowflakeTable",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GetSnowSchema')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobToSnowflakeParameterized')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BlobInputCSV",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachFileItems",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFiles').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LookupSnowFlakeTables",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeSource",
											"query": {
												"value": "@concat('select * from information_schema.tables where table_schema = ''', pipeline().parameters.SCHEMA_NAME,''' and table_name =''', toUpper(first(split(item().name,'.'))),'''')",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "GetSnowSchema",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Table Exists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LookupSnowFlakeTables",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Set FileType Variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(activity('LookupSnowFlakeTables').output,'firstRow')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy data from Blob to Snowflake",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Set TableName Variable",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@concat(variables('TableName'),'.',variables('FileType'))",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "SnowflakeSink",
														"importSettings": {
															"type": "SnowflakeImportCopyCommand",
															"additionalCopyOptions": {
																"ON_ERROR": "SKIP_FILE"
															}
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "BlobInputCSV",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "SnowDynamicDataset",
														"type": "DatasetReference",
														"parameters": {
															"SnowFileName": {
																"value": "@variables('TableName')",
																"type": "Expression"
															},
															"SnowSchemaName": {
																"value": "@pipeline().parameters.SCHEMA_NAME",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Set TableName Variable",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "TableName",
													"value": {
														"value": "@activity('LookupSnowFlakeTables').output.firstRow.TABLE_NAME",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Set FileType Variable",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileType",
										"value": {
											"value": "@split(item().name,'.')[1]",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SCHEMA_NAME": {
						"type": "string",
						"defaultValue": "ARN_LANDING"
					}
				},
				"variables": {
					"TableName": {
						"type": "String"
					},
					"FileType": {
						"type": "String"
					},
					"SchemaVar": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GetSnowSchema')]",
				"[concat(variables('factoryId'), '/datasets/SnowDynamicDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inputfilecheck')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ParameterJson",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childitems.itemname",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Fileexistance",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Fileexistance": {
						"type": "String"
					},
					"Filecheck": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ParameterJson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CONTAINER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BlobInputCSV",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ParameterJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Get_File",
							"value": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Look_File",
							"value": {
								"value": "@activity('Lookup1').output.firstRow['CUST']",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\nactivity('Get Metadata1').output.childItems,\nactivity('Lookup1').output.firstRow['CUST']\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Set variable3",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Msg_test",
										"value": "Hi"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Look_File": {
						"type": "Array"
					},
					"Get_File": {
						"type": "Array"
					},
					"Msg_test": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ParameterJson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FUSION_SOURCE_TO_LAND')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CPY_SOURCE_TO_LANDING",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeSink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand",
									"additionalCopyOptions": {
										"ON_ERROR": "CONTINUE"
									}
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_FUSION_BLOB_INPUT_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SnowDynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"SnowFileName": {
										"value": "EMPLOYEE",
										"type": "Expression"
									},
									"SnowSchemaName": {
										"value": "@pipeline().parameters.SCHEMA_NAME",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SCHEMA_NAME": {
						"type": "string",
						"defaultValue": "ARN_LANDING"
					}
				},
				"variables": {
					"TableName": {
						"type": "String"
					},
					"FileType": {
						"type": "String"
					},
					"SchemaVar": {
						"type": "String"
					},
					"JsonFileName": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "FUSION"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FUSION_BLOB_INPUT_CSV')]",
				"[concat(variables('factoryId'), '/datasets/SnowDynamicDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FUSION_SOURCE_TO_LAND_BKP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET_MET_CONTAINER_FILE",
						"description": "",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "VAR_TO_GET_CUST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BlobInputCSV",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "FOR_EACH_CONTAINER_FILE",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET_MET_CONTAINER_FILE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET_MET_CONTAINER_FILE').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LKP_SNOWFLAKE_BLOB_CONTAINER",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeSource",
											"query": {
												"value": "@concat('select * from information_schema.tables where table_schema = ''', pipeline().parameters.SCHEMA_NAME,''' and table_name =''', toUpper(first(split(item().name,'.'))),'''')",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand"
											}
										},
										"dataset": {
											"referenceName": "SnowDynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"SnowFileName": {
													"value": "@variables('TableName')",
													"type": "Expression"
												},
												"SnowSchemaName": {
													"value": "@toUpper(first(split(item().name,'.')))",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "IF_TABLE_EXISTS",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LKP_SNOWFLAKE_BLOB_CONTAINER",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "VAR_FILETYPE_VARIABLE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(activity('LKP_SNOWFLAKE_BLOB_CONTAINER').output,'firstRow')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "CPY_SOURCE_TO_LANDING",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "VAR_TABLE_NAME",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@concat(variables('TableName'),'.',variables('FileType'))",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "SnowflakeSink",
														"importSettings": {
															"type": "SnowflakeImportCopyCommand",
															"additionalCopyOptions": {
																"ON_ERROR": "ABORT_STATEMENT"
															}
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "BlobInputCSV",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "SnowDynamicDataset",
														"type": "DatasetReference",
														"parameters": {
															"SnowFileName": {
																"value": "@variables('TableName')",
																"type": "Expression"
															},
															"SnowSchemaName": {
																"value": "@pipeline().parameters.SCHEMA_NAME",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "VAR_TABLE_NAME",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "TableName",
													"value": {
														"value": "@activity('LKP_SNOWFLAKE_BLOB_CONTAINER').output.firstRow.TABLE_NAME",
														"type": "Expression"
													}
												}
											},
											{
												"name": "EMAIL_SUCCESS",
												"type": "WebActivity",
												"dependsOn": [
													{
														"activity": "CPY_SOURCE_TO_LANDING",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"url": "https://prod-23.australiaeast.logic.azure.com:443/workflows/d8931bd55622434780d5c0f6a0e887df/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=Fwz947WiGUqHh5dtvm1GSxFM14YUbIhpTYwFUxix65Q",
													"method": "POST",
													"headers": {},
													"body": {
														"value": "{\n    \"title\": \"PIPELINE SUCCEEDED!\",\n    \"message\": \"Pipeline for @{variables('TableName')} run finished successfully!\",\n    \"color\": \"Green\",\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"pipelineName\": \"@{pipeline().Pipeline}\",\n    \"pipelineRunId\": \"@{pipeline().RunId}\",\n    \"time\": \"@{utcnow()}\"\n}",
														"type": "Expression"
													}
												}
											},
											{
												"name": "EMAIL_FAILURE",
												"type": "WebActivity",
												"dependsOn": [
													{
														"activity": "CPY_SOURCE_TO_LANDING",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"url": "https://prod-23.australiaeast.logic.azure.com:443/workflows/d8931bd55622434780d5c0f6a0e887df/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=Fwz947WiGUqHh5dtvm1GSxFM14YUbIhpTYwFUxix65Q",
													"method": "POST",
													"headers": {},
													"body": {
														"value": "{\n    \"title\": \"PIPELINE Failed!\",\n    \"message\": \"Pipeline for @{variables('TableName')} run got aborted!\",\n    \"color\": \"Green\",\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"pipelineName\": \"@{pipeline().Pipeline}\",\n    \"pipelineRunId\": \"@{pipeline().RunId}\",\n    \"time\": \"@{utcnow()}\"\n}",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "VAR_FILETYPE_VARIABLE",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileType",
										"value": {
											"value": "@split(item().name,'.')[1]",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "LKP_PARAMETER_JSON",
						"description": "This lookup is to get the values from json file.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_FUSION_PARAMETER_JSON",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "VAR_TO_GET_CUST",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LKP_PARAMETER_JSON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "JsonFileName",
							"value": {
								"value": "@activity('LKP_PARAMETER_JSON').output.firstRow['CUST']",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SCHEMA_NAME": {
						"type": "string",
						"defaultValue": "ARN_LANDING"
					}
				},
				"variables": {
					"TableName": {
						"type": "String"
					},
					"FileType": {
						"type": "String"
					},
					"SchemaVar": {
						"type": "String"
					},
					"JsonFileName": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "FUSION"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FUSION_PARAMETER_JSON')]",
				"[concat(variables('factoryId'), '/datasets/SnowDynamicDataset')]"
			]
		}
	]
}